/*
cd /Users/haroldhernandez/Charybdis/zmk-config-charybdis_nano

source ~/zephyrproject/.venv/bin/activate


//To install local zmk
# Tell west the config directory included in this repo
west init -l config
west update                # fetch Zephyr, ZMK, HALs
west zephyr-export         # sets Zephyr CMake package files in venv


west build -p \
  -s zmk/app -b nice_nano_v2 -d build/right \
  -S zmk-usb-logging \
  -S studio-rpc-usb-uart \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
  -DSHIELD=charybdis_right



west build -p \
  -s zmk/app -b nice_nano_v2 -d build/left \
  -S zmk-usb-logging \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
  -DSHIELD=charybdis_left

#To check the numbers:

   ls /dev/tty.usbmodem*   # data-terminal devices
   ls /dev/cu.usbmodem*    # call-up devices (identical, no HW flow-ctrl)

#and run to actuvate debug 
   sudo tio /dev/tty.usbmodem1101
   
-------------------------------------------------

west build -p \
  -s zmk/app -b nice_nano_v2 -d build/right \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
  -DSHIELD=charybdis_right



west build -p \
  -s zmk/app -b nice_nano_v2 -d build/left \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
  -DSHIELD=charybdis_left



west build -p \
  -s zmk/app -b nice_nano_v2 -d build/right \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DSHIELD=charybdis_right

west build -p \
  -s zmk/app -b nice_nano_v2 -d build/left \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DSHIELD=charybdis_left

*/

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
//#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

/* On demand includes */

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
//#include <input/processors.dtsi>


//     0  1  2  3  4         5  6  7  8  9
//    10 11 12 13 14        15 16 17 18 19
//    20 21 22 23 24        25 26 27 28 29 
//    30 31 32 33 34 35  36 37          38

//     0  1  2  3  4     5  6  7  8  9
//    10 11 12 13 14    15 16 17 18 19
//20  21 22 23 24 25    26 27 28 29 30  31
//        32 33 34         35 36 37


&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&sl {
    release-after-ms = <4000>;
};


&caps_word { continue-list = <UNDERSCORE MINUS>; };
#include "mouse.dtsi"

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {

    #include "macros/macros_general.dtsi"
    #include "behaviors/behaviors_general.dtsi"
    #include "combos/combos_general.dtsi"

    keymap {
        compatible = "zmk,keymap";
 base_layer {
            label = "BASE";
            bindings = <
                               &kp Q                  &kp W               &kp F             &kp P             &kp B                           &kp J    &kp L             &kp U                  &kp Y                &kp SQT
                               &kp A                  &kp R               &kp S             &kp T             &kp G                           &kp M    &kp N             &bhmou SNIPE E      &kp I                &kp O
                               &hml_hr LSHFT Z        &hml_hr LCTRL X     &hml_hr LALT C    &hml_hr LGUI D    &kp V                           &kp K    &hmr_hr LGUI H    &hmr_hr LALT COMMA     &hmr_hr LCTRL DOT    &hmr_hr LSHFT SLASH        
 &lm_homerow_short LALT DEL  &lm_homerow_short LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                 &base_th_mo_kp_hp RAISE ENTER  &spacelm LOWER SPACE  
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp Q                    &kp W            &kp F            &kp P           &kp B                    &kp J          &kp L              &kp U                 &kp Y                  &kp SQT
&kp A                    &kp R            &kp S            &kp T           &kp G                    &kp M          &mkp LCLK          &mo SNIPE             &mo SCROLL             &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA     &lrrMo LCTRL DOT       &lrrMo LSHFT SLASH 
 &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

        basescroll_layer {
            label = "MOUSETOP";
            bindings = <
&kp Q                    &kp W            &kp F            &kp P           &kp B                    &kp J          &kp L              &kp U                 &kp Y                  &kp SQT
&kp A                    &kp R            &kp S            &kp T           &kp G                    &kp M          &mkp LCLK          &mo SNIPE             &mo SCROLL             &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA     &lrrMo LCTRL DOT       &lrrMo LSHFT SLASH 
 &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

         scroll_layer {
            label = "SCROLL";
            bindings = <
&kp Q                   &kp W           &kp F           &kp P          &kp B                        &kp J         &kp L              &kp U                &kp Y                &kp SQT
&kp A                   &kp R           &kp S           &kp T          &kp G                        &kp M         &mkp LCLK          &mo FAST             &mo SCROLL           &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K         &lrrMo LGUI H      &lrrMo LALT COMMA    &lrrMo LCTRL DOT     &lrrMo LSHFT SLASH 
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&kp Q                   &kp W           &kp F           &kp P          &kp B                        &kp J          &kp L              &kp U                &kp Y                &kp SQT
&kp A                   &kp R           &kp S           &kp T          &kp G                        &kp M          &mkp LCLK          &mo SNIPE            &mo SCROLLTOP        &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA    &lrrMo LCTRL DOT     &lrrMo LSHFT SLASH 
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

        scrolltop_layer {
            label = "SCROLLTOP";
            bindings = <
&kp Q                    &kp W            &kp F            &kp P           &kp B                    &kp J          &kp L              &kp U                 &kp Y                 &kp SQT
&kp A                    &kp R            &kp S            &kp T           &kp G                    &kp M          &mkp LCLK          &mo FAST              &mo SCROLL            &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA     &lrrMo LCTRL DOT       &lrrMo LSHFT SLASH 
 &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

    fast_layer {
        label = "FAST";
        bindings = <
&kp Q                   &kp W           &kp F           &kp P          &kp B                        &kp J          &kp L              &kp U                &kp Y                &kp SQT
&kp A                   &kp R           &kp S           &kp T          &kp G                        &kp M          &mkp LCLK          &mo SNIPE            &mo SCROLL           &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA    &lrrMo LCTRL DOT     &lrrMo LSHFT SLASH 
 &lm_homerow_short LALT DEL  &lm_homerow_short LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                    &base_th_mo_kp_hp RAISE ENTER  &spacelm LOWER SPACE  
        >;
    };

        lower_layer {
            label = "LOWER";
            bindings = <
                  &kp N1                   &kp N2           &kp N3           &kp N4          &kp N5                    &kp N6           &kp N7                &kp N8                    &kp N9          &kp N0
                  &kp A                    &kp R            &kp S            &kp T           &kp G                     &kp M            &kp HOME              &kp UP                    &kp END         &kp PG_UP
                  &lrlMo LSHFT Z           &lrlMo LCTRL X   &lrlMo LALT C    &lrlMo LGUI D   &kp V                     &kp EQUAL        &kp LEFT              &kp DOWN                  &kp RIGHT       &kp PG_DN 
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
                  &kp EXCL                   &kp AT                      &kp HASH                         &kp DLLR                          &kp PRCNT                       &kp CARET           &kp AMPS                   &kp STAR                  &kp LPAR                  &kp RPAR
                  &kp PIPE                   &kp LBRC                    &kp RBRC                         &kp TILDE                         &kp UNDER                       &kp PLUS            &kp COLON                  &kp LT                    &kp GT                    &kp QUESTION
                  &lrlMo LSHFT BSLH          &lrlMo LCTRL LBKT           &lrlMo LALT RBKT                 &lrlMo LGUI GRAVE                 &kp MINUS                       &kp EQUAL           &lrrMo LGUI SEMI           &lrrMo RALT COMMA         &lrrMo RCTRL DOT          &lrrMo RSHFT SLASH              
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };

        layer_direcaacc {
            label = "DIRECTACC";
            bindings = <
&td_find_s_ht A LG(F)  &none                          &none                         &none               &none                                    &none       &none      &none        &none      &none
&none                  &td_find_g_ht LG(F) LG(LS(F))  &lrlMo LA(LS(H)) LA(LS(F12))  &kp LC(LS(MINUS))   &kp LC(MINUS)                            &none       &none      &none        &none      &none 
&kp LSHFT              &kp LCTRL                      &kp LALT                      &kp LGUI            &caps_word                               &none       &none      &none        &none      &none
                                           &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                   &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };

        layer_func {
            label = "FUNC";
            bindings = <
                  &kp F1     &kp F2     &kp F3                  &kp F4                    &kp F5                          &kp F6              &kp F7                     &kp F8                    &kp F9        &kp F10
                  &kp LSHFT  &kp LCTRL  &kp LALT                &kp LGUI                  &kp F11                         &kp F12             &kp RGUI                   &kp RALT                  &kp RGUI      &kp RSHFT
                  &kp LSHFT  &kp LCTRL  &kp LALT                &kp LGUI                  &kp F11                         &kp F12             &kp RGUI                   &kp RALT                  &kp RGUI      &kp RSHFT      
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
             &bt_0         &bt_1   &bt_2                   &bt_3                     &bt_4                           &trans                 &trans                  &trans                    &trans  &trans
             &out OUT_USB  &trans  &trans                  &trans                    &trans                          &trans                 &trans                  &trans                    &trans  &trans
             &sys_reset    &trans  &trans                  &trans                    &trans                          &trans                 &trans                  &trans                    &trans  &sys_reset  
  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };

        layer_numbers {
            label = "NUMBERS";
            bindings = <
                  &kp EXCL                   &kp AT             &kp HASH                &kp DLLR                  &kp PRCNT                       &kp EQUAL          &kp N7                    &kp N8                   &kp N9           &kp STAR
                  &kp PIPE                   &kp LBRC           &kp RBRC                &kp TILDE                 &kp COMMA                       &kp DOT            &kp N4                    &kp N5                   &kp N6           &kp N0
                  &kp LSHFT                  &kp LCTRL          &kp LALT                &kp LGUI                  &kp MINUS                       &kp PLUS           &kp N1                    &kp N2                   &kp N3           &lrrMo RALT SLASH       
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };

        warp_layer {
            label = "WARP";
            bindings = <
&kp Q                   &kp W               &kp F           &kp P          &kp B                        &kp J          &kp L              &kp U                &kp Y                &kp SQT
&kp A                   &kp R               &kp S           &kp T          &kp G                        &kp M          &mkp LCLK          &mo SNIPE            &mo SCROLL           &mkp RCLK
&lrlMo LSHFT Z           &lrlMo LCTRL X       &lrlMo LALT C    &lrlMo LGUI D   &kp V                    &kp K          &lrrMo LGUI H      &lrrMo LALT COMMA    &lrrMo LCTRL DOT     &lrrMo LSHFT SLASH 
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                 &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE   
            >;
        };

        layer_system {
            label = "SYSTEM";
            bindings = <
&kp LC(C_BRI_DN)       &kp LC(C_BRI_UP)           &kp C_BRI_DN                  &kp C_BRI_UP       &none                          &kp C_VOL_UP     &kp C_PREV         &kp C_PP           &kp C_NEXT      &none
&none                  &kp LC(UP)                 &kp LC(LS(LEFT))              &kp LC(DOWN)       &kp F11                        &kp C_VOL_DN     &bt_0              &bt_1              &bt_2           &bt_3
&kp LSHFT              &kp LCTRL                  &kp LALT                      &kp LGUI           &none                          &kp C_MUTE       &kp LGUI           &kp LALT           &kp LCTRL       &kp LSHFT
  &th_kp_kp_hp LALT DEL  &th_kp_kp_hp LSHFT BACKSPACE  &th_kp_kp_hp LGUI TAB                  &th_mo_kp_hp RAISE ENTER   &space LOWER SPACE  
            >;
        };


    };

};

